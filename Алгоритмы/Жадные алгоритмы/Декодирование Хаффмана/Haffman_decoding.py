# В первой строке входного файла заданы два целых числа k и l через пробел — количество различных букв, встречающихся в строке, и размер получившейся закодированной строки, соответственно. 
# В следующих k строках записаны коды букв в формате "letter: code". Ни один код не является префиксом другого. Буквы могут быть перечислены в любом порядке. 
# В качестве букв могут встречаться лишь строчные буквы латинского алфавита; каждая из этих букв встречается в строке хотя бы один раз.
# Наконец, в последней строке записана закодированная строка. Исходная строка и коды всех букв непусты. 
# Заданный код таков, что закодированная строка имеет минимальный возможный размер.

# В первой строке выходного файла выведите строку ss. Она должна состоять из строчных букв латинского алфавита.

k=int(input().split(' ')[0]) #Количество строк с кодами букв 
m=[]
d={}
for i in range(k):
    m.append(input().split(': '))
s=input() #Строка, которую необходимо преобразовать

for i in range(len(m)): #Создание словаря, в котором ключ - это код, а значение - это буква
    d[m[i][1]]=m[i][0]

maxlen=0
for i in d: #Находим максимальную длину кода символа, чтобы брать из введенной строки s сразу maxlen символов
    if len(i)>maxlen:
        maxlen=len(i)

start=0
q=maxlen
s2=''
while start<=len(s)-1:
    if s[start:start+q] in d:
        s2+=d[s[start:start+q]]
        start+=q
        q=maxlen
    else:
        q-=1
print(s2)
